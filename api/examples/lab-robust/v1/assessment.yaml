# This file is _not_ standardized at all. It is currently just an export of
# activity tracking from the Qwiklabs interface and is subject to change.
# Consider it an early alpha version of the file.
---
:name: 'BigQuery: Qwik Start - Web User Interface'
:description: "This lab has following steps:\r\n\r\n1. Create a dataset\r\n2. Load
  the data into a new table"
:pass_percent: !ruby/object:BigDecimal 18:0.75e2
:notify: false
:score_completion_only: false
:steps:
- :title: Create a new dataset
  :points: 5
  :max: 30
  :interval: 30
  :multi_region: false
  :api: GCP
  :services:
  - BigqueryV2
  :method_name: steponecheck
  :code: |
    def steponecheck(handles, points)
      bq = handles[:BigqueryV2]
      ret_hash = {done: false, score: 0}
      datasets = bq.list_datasets&.datasets || []
      if datasets.count > 0
        ret_hash[:score] += 2
        datasets.each do |dataset|
          if dataset.dataset_reference.dataset_id == 'babynames'
            ret_hash[:score] += 3
          end
        end
      end
      if ret_hash[:score] == points
        ret_hash = { :done => true, :score => points }
      end
      ret_hash
    end
- :title: Upload the table
  :points: 5
  :max: 30
  :interval: 30
  :multi_region: false
  :api: GCP
  :services:
  - BigqueryV2
  :method_name: steptwocheck
  :code: |
    def steptwocheck(handles, points)
      bq = handles[:BigqueryV2]
      ret_hash = {done: false, score: 0}
      datasets = bq.list_datasets&.datasets || []
      if datasets.count > 0
        datasets.each do |dataset|
          if dataset.dataset_reference.dataset_id == 'babynames'
            tables = bq.list_tables('babynames')&.tables || []
            if tables.count > 0
            ret_hash[:score] += 2
              tables.each do |table|
                if table.table_reference.table_id == 'names_2014'
                  ret_hash[:score] += 3
                end
              end
            end
          end
        end
      end
      if ret_hash[:score] == points
        ret_hash = { :done => true, :score => points }
      end
      ret_hash
    end
